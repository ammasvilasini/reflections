it helped to see the differences between the two files.

Reflection 2- As a developer i would like to have the flexibility to save when i want to. In the case of experimentation, i wouldn't want to write over the other code if i was just trying something out. I would like to have control on the "save".

How could having easy access to the entire history of a file make you a more efficient programmer in the long term?
Because you can go back to previous versions if you've made some serious error. Its great to be able to rewind.

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, 
like Google docs does?
the pros are that you have explicit control over the commit, and you won't overwrite something - in case you are experimenting. The cons are that if you forget to commit you could lose your changes if the computer crashes or some event like that happens. 

Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?
Because git is aimed at being a versioning system for software that runs from multiple files at the same time, while google docs for instance, is usually used as one file at a time.

How can you use the commands git log and git diff to view the history of files?
You can use git log and git diff to see what changes were made to the file for every commit that is made in Git. 

How might using version control make you more confident to make changes that could break something?
you can be as confident as you want as long as you have the ability to revert to previous versions, you can be as adventurous as you can be. 

